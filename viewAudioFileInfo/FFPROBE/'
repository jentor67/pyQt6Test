#!/usr/bin/python3
import pandas as pd
import csv
import os, fnmatch
import subprocess as SP
import warnings
warnings.filterwarnings("ignore", category=DeprecationWarning)


#df = pd.DataFrame(columns=["file","codec_name","sample_rate",\
#        "duration","bit_rate"])

dirIn ="/home/jmajor/Music/Boy2"

streamList = "codec_name,sample_rate,duration,bit_rate"
streamTAGList = "ARTIST,track"
formatList = ""

List = ""

List = streamList + "," + streamTAGList + "," + formatList
DFColumns = List.split(",")
DFColumns.remove("")
print(DFColumns)

df = pd.DataFrame(columns=DFColumns)
print(dfTest)
# show multiple values in packets with csv
commandPrefix = "ffprobe -v error -show_entries " 
#        "stream=codec_name,sample_rate,duration,bit_rate " + \
commandSuffix = "-print_format csv=item_sep=,:print_section=0 " 

pattern="*.ogg"

# List all files in dirIn folder
for filename in os.listdir(dirIn):
    f = os.path.join(dirIn, filename)
    # list only files with the proper match
    if fnmatch.fnmatch(filename,pattern):
        masterList =[]
        if len(streamList) > 0 :
            # create the command for each file
            cmd = commandPrefix + " stream=" + streamList + " " + \
                commandSuffix  + " '" + f + "'" 
            result = SP.run(cmd, capture_output = True,
                text=True,shell=True,executable="/bin/bash")

        if len(streamTAG) > 0 :
            # create the command for each file
            cmd = commandPrefix + " stream_tags=" + \
                streamTAGList + " " + \
                commandSuffix  + " '" + f + "'" 
            result = SP.run(cmd, capture_output = True,
                text=True,shell=True,executable="/bin/bash")

            # convert to list and remove end of line
        masterList = result.stdout.strip().split(",")

        # add file name to list
        masterList.insert(0,filename)

        df.loc[len(df)] = masterList
       
print(df)
